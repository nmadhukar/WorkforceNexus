
-- Education history (multiple per employee)
CREATE TABLE educations (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    education_type VARCHAR(50),
    school_institution VARCHAR(100),
    degree VARCHAR(50),
    specialty_major VARCHAR(100),
    start_date DATE,
    end_date DATE CHECK (end_date > start_date)
);

-- Employment history (multiple per employee)
CREATE TABLE employments (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    employer VARCHAR(100),
    position VARCHAR(100),
    start_date DATE,
    end_date DATE,
    description TEXT
);

-- Peer references (multiple per employee)
CREATE TABLE peer_references (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    reference_name VARCHAR(100),
    contact_info VARCHAR(100),
    relationship VARCHAR(100),
    comments TEXT
);

-- State licenses (multiple per employee)
CREATE TABLE state_licenses (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    license_number VARCHAR(50) NOT NULL,
    state VARCHAR(50) NOT NULL,
    issue_date DATE,
    expiration_date DATE CHECK (expiration_date > issue_date),
    status VARCHAR(50)
);

-- DEA licenses (multiple per employee)
CREATE TABLE dea_licenses (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    license_number VARCHAR(50) NOT NULL,
    issue_date DATE,
    expiration_date DATE CHECK (expiration_date > issue_date),
    status VARCHAR(50)
);

-- Board certifications (multiple per employee)
CREATE TABLE board_certifications (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    board_name VARCHAR(100),
    certification VARCHAR(100),
    issue_date DATE,
    expiration_date DATE CHECK (expiration_date > issue_date),
    status VARCHAR(50)
);


-- New: Emergency contacts (multiple per employee)
CREATE TABLE emergency_contacts (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    relationship VARCHAR(50),
    phone VARCHAR(20),
    email VARCHAR(100)
);

-- New: Tax forms (e.g., I-9, W-4; multiple per employee)
CREATE TABLE tax_forms (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    form_type VARCHAR(50) NOT NULL,  -- e.g., 'I-9', 'W-4'
    file_path VARCHAR(255),
    submitted_date DATE,
    status VARCHAR(50)
);

-- New: Trainings/CEUs (multiple per employee)
CREATE TABLE trainings (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    training_type VARCHAR(100),
    provider VARCHAR(100),
    completion_date DATE,
    expiration_date DATE,
    credits DECIMAL(5,2),
    certificate_path VARCHAR(255)
);

-- New: Payer enrollments (multiple per employee)
CREATE TABLE payer_enrollments (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    payer_name VARCHAR(100),  -- e.g., 'Medicare', 'Aetna'
    enrollment_id VARCHAR(50),
    enrollment_date DATE,
    status VARCHAR(50)
);

-- New: Incident logs (multiple per employee)
CREATE TABLE incident_logs (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER REFERENCES employees(id) ON DELETE CASCADE,
    incident_date DATE NOT NULL,
    description TEXT,
    resolution TEXT,
    reported_by VARCHAR(50)
);

